plot(scores$Section,scores$Score,
main = "Section vs Scores",
xlab = "Section",
ylab = "Scores achieved by students")
<<<<<<< HEAD
install.packages(c("askpass", "backports", "BH", "blob", "boot", "broom", "callr", "caret", "caTools", "cli", "clipr", "cluster", "curl", "DBI", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreach", "foreign", "formatR", "fs", "glmnet", "gower", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "ipred", "IRkernel", "iterators", "KernSmooth", "knitr", "later", "lava", "markdown", "MASS", "Matrix", "mgcv", "mime", "modelr", "mongolite", "nlme", "numDeriv", "odbc", "openssl", "pillar", "pkgconfig", "plyr", "processx", "prodlim", "profvis", "progress", "promises", "purrr", "quantmod", "R6", "Rcpp", "recipes", "repr", "reprex", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "rvest", "scales", "selectr", "shiny", "sparklyr", "survival", "sys", "tibble", "tidyr", "tidyverse", "tinytex", "TTR", "whisker", "xfun", "xml2", "zoo"))
# TASK 2.1
rm(list = ls())
# Load the libraries needed
library(ggplot)
library(ggplot2)
library(tidyr)
library("readr", lib.loc="C:/Users/saman/.conda/envs/renv/Lib/R/library")
library(readr)
install.packages("readr")
install.packages("tidyr")
install.packages("ggplot2")
acs <- read_csv("acs-14-1yr-s0201.csv")
library(readr)
acs <- read_csv("acs-14-1yr-s0201.csv")
str(acs)
head(acs)
head(acs)
nrow(acs)
ncol(acs)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram()
library(ggplot2)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram()
ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density..), binwidth = 0.1)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density..), binwidth = 10)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density..), binwidth = 5)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density..), binwidth = 10)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram(binwidth = 10)
nrow(subset(acs, HSDegree > 0 & HSDegree < 70))
nrow(subset(acs, HSDegree > 60 & HSDegree < 70))
nrow(subset(acs, HSDegree > 70 & HSDegree < 70))
nrow(subset(acs, HSDegree > 70 & HSDegree < 80))
nrow(subset(acs, HSDegree > 0 & HSDegree < 80))
nrow(subset(acs, HSDegree > 0 & HSDegree < 80))
df1 <- (subset(acs, HSDegree > 0 & HSDegree < 80))
df1
ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..count..), binwidth = 10)
df1 <- (subset(acs, HSDegree > 0 & HSDegree < 90))
df1
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, position = "identity")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, position = "identity", alpha = 0.4)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, position = "stack", alpha = 0.4)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, position = "dodge", alpha = 0.4)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, position = "stack", alpha = 0.4)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6)
nrows(subset(acs, HSDegree > 85 & HSDegree < 95))
nrow(subset(acs, HSDegree > 85 & HSDegree < 95))
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6) +
geom_label("Histogram of High SChool Degree Percentage")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6) +
geom_label(aes("Histogram of High SChool Degree Percentage"))
acs <- read_csv("acs-14-1yr-s0201.csv")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6)
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6) +
geom_label(aes("Histogram of High SChool Degree Percentage"))
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6) +
ggtitle("Histogram of High SChool Degree Percentage")
ggtitle("Histogram of High School Degree in %")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6) +
ggtitle("Histogram of High School Degree in %")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6) +
labs(title = "Histogram of High School Degree in %")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 10, alpha = 0.6) +
labs(title = "Histogram of High School Degree in %",
x = "HS Degree", y = "Count")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 2, alpha = 0.6) +
labs(title = "Histogram of High School Degree in %",
x = "HS Degree", y = "Count")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 2, alpha = 0.6) +
labs(title = "Histogram Using ggplot2",
x = "HS Degree %", y = "Count")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 5, alpha = 0.6) +
labs(title = "Histogram Using ggplot2",
x = "HS Degree %", y = "Count")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 3, alpha = 0.6) +
labs(title = "Histogram Using ggplot2",
x = "HS Degree %", y = "Count")
ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 3, alpha = 0.6) +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Count")
gghist <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 3, alpha = 0.6) +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Count")
=======
install.packages(c("ggplot2", "readr", "tidyr"))
rm(list = ls())
library(ggplot2)
library(tidyr)
library(readr)
acs <- read_csv("acs-14-1yr-s0201.csv")
>>>>>>> b89c584ee7236a72918edf36c222ff980e900ff5
gghist <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 3, alpha = 0.6) +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Count")
gghist
<<<<<<< HEAD
gghist1 <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
gghist1
gghist1 <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 3, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
gghist1
gghist1 <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 0.1, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
gghist1
gghist1 <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 1, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
gghist1
ggdens + stat_function(fun = dnorm, args = list(mean = mean(acs$HSDegree, na.rm = TRUE),
sd = sd(acs$HSDegree, na.rm = TRUE)),
color = "red", size = 1 )
=======
>>>>>>> b89c584ee7236a72918edf36c222ff980e900ff5
ggdens <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 1, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
ggdens
ggdens + stat_function(fun = dnorm, args = list(mean = mean(acs$HSDegree, na.rm = TRUE),
sd = sd(acs$HSDegree, na.rm = TRUE)),
color = "red", size = 1 )
qplot(sample = acs$HSDegree, stat = "qq")
rm(list = ls())
library(ggplot2)
library(tidyr)
library(readr)
acs <- read_csv("acs-14-1yr-s0201.csv")
str(acs)
head(acs)
ggdens <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 1, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
ggdens
ggdens + stat_function(fun = dnorm, args = list(mean = mean(acs$HSDegree, na.rm = TRUE),
sd = sd(acs$HSDegree, na.rm = TRUE)),
color = "red", size = 1 )
qplot(sample = acs$HSDegree, stat = "qq")
qplot(sample = acs$HSDegree, stat = "qq")
library(ggplot2)
library(tidyr)
library(readr)
library(pastecs)
qplot(sample = acs$HSDegree, stat = "qq")
ggplot(acs, aes(sample = acs$HSDegree)) + stat_qq()
ggplot(acs, aes(sample = acs$HSDegree)) + stat_qq() + geom_abline()
ggplot(acs, aes(sample = acs$HSDegree)) + stat_qq() + geom_smooth()
ggplot(acs, aes(sample = acs$HSDegree)) + stat_qq() + geom_smooth(method = "lm", se = FALSE)
ggplot(acs, aes(sample = acs$HSDegree)) + stat_qq()
head(fortify(acs))
require(ggplot2)
head(fortify(acs))
fortify(acs)
m <- mean(acs$HSDegree)
m <- mean(acs$HSDegree)
s <- sd(acs$HSDegree)
n <- nrow(acs$HSDegree)
p <- (1 : n) / n - 0.5 / n
n <- nrow(acs$HSDegree)
n <- nrow(acs$HSDegree)
n
nrow(acs)
nrow(acs$HSDegree)
nrow(acs)
p <- (1 : n) / n - 0.5 / n
nrow(acs)
(1 : n) / n - 0.5 / n
(1 : n)
rnorm(n = n1, mean = m1, sd = sd1)
m1 <- mean(acs$HSDegree)
sd1 <- sd(acs$HSDegree)
n1 <- nrow(acs)
p <- rnorm(n = n1, mean = m1, sd = sd1)
rnorm(n = n1, mean = m1, sd = sd1)
ggplot(acs) + geom_point(aes(x = p, y = sort(pnorm(HSDegree, m1, sd1))))
(1:n)
(1:n1)
(1:n1)
(1:n1) /n1
(1:n1) /n1
(1:n1) /n1 - 0.5 /n1
ggplot(acs) + geom_point(aes(x = p, y = sort(pnorm(HSDegree, m1, sd1))))
ggplot(acs) + geom_point(aes(x = p, y = sort(pnorm(HSDegree, m1, sd1))))
stat.desc(acs$HSDegree, basic = FALSE, norm = TRUE)
ggdens <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 1, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
ggdens
ggdens + stat_function(fun = dnorm, args = list(mean = mean(acs$HSDegree, na.rm = TRUE),
sd = sd(acs$HSDegree, na.rm = TRUE)),
color = "red", size = 1 )
# Assignment: ASSIGNMENT 3.1 2014 American Community Survey
# Name: SAMANTA, ARINDAM
# Date: 22 DECEMBER 2019
# TASK 3.1
rm(list = ls())
# Load the libraries needed
library(ggplot2)
library(tidyr)
library(readr)
library(pastecs)
# Reading the file into a dataframe:acs
# The dataset contains 8 variables with 136 observations
# The elements are ID, Id2, Geography,PopGroupID, POPGROUP.display-label`, RacesReported,
# HSDegree and BachDegree.
# The data types are shown in the output of str()
acs <- read_csv("acs-14-1yr-s0201.csv")
sink("assignment_3.1.1_ACS_2014_SamantaArindam.txt")
# Viewing a sample of the data from the data frame
print(head(acs))
#2. Structure of the dataframe
print(str(acs))
#2. No. of observations/rows
nrow(acs)
#2. No of variables/columns
print(ncol(acs))
sink()
# Counting the No of rows having the HS Degree between 85% and 95%
# This is just to ensure that the histogram count is showing properly
nrow(subset(acs, HSDegree > 85 & HSDegree < 95))
pdf("assignment_3.1.1_Histogram_SamantaArindam.pdf")
#3. Histogram with HSDegree variable
# Using gghist as the object I have plotted a simple histogram
# binwidth is set to 5 which shows an outlier
gghist <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 5, alpha = 0.6) +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Count")
# Plot the histogram
gghist
# This second histogram we have asked for density plot as we want to plot the normal curve
# 4 The data distribution from the frequency histogram shows that it is bimodal as we have 2 towers.
# -------------------------------------------------------------------------------------------------
ggdens <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 1, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
# print the plot
ggdens
# Adding another layer to the chart - normal curve
# Adding another layer stat_function() to the histogram object ggdens
# The curve shows that the distribution is not symmetrical/normal. It is not bell-shaped.
# It is negatively skewed as the higher frequency values are towards the tail
# No this data cannot be represented as a normal model.
ggdens + stat_function(fun = dnorm, args = list(mean = mean(acs$HSDegree, na.rm = TRUE),
sd = sd(acs$HSDegree, na.rm = TRUE)),
color = "red", size = 1 )
# Drawing a Q-Q plot
# This is another way to inspect and see if a distribution is normal
ggplot(acs, aes(sample = acs$HSDegree)) + stat_qq()
## As the QQ plot also shows as it does not have all the points on the diagonal so the distribution is not normal.
graphics.off()
sink("assignment_3.1.2_ACS_2014_SamantaArindam.txt")
# 7 Using stat.desc function from the package pastecs
print(stat.desc(acs$HSDegree, basic = FALSE, norm = TRUE))
sink()
# Assignment: ASSIGNMENT 3.1 2014 American Community Survey
# Name: SAMANTA, ARINDAM
# Date: 22 DECEMBER 2019
# TASK 3.1
rm(list = ls())
# Load the libraries needed
library(ggplot2)
library(tidyr)
library(readr)
library(pastecs)
# Reading the file into a dataframe:acs
# The dataset contains 8 variables with 136 observations
# The elements are ID, Id2, Geography,PopGroupID, POPGROUP.display-label`, RacesReported,
# HSDegree and BachDegree.
# The data types are shown in the output of str()
acs <- read_csv("acs-14-1yr-s0201.csv")
sink("assignment_3.1.1_ACS_2014_SamantaArindam.txt")
# Viewing a sample of the data from the data frame
print(head(acs))
#2. Structure of the dataframe
print(str(acs))
#2. No. of observations/rows
nrow(acs)
#2. No of variables/columns
print(ncol(acs))
sink()
# Counting the No of rows having the HS Degree between 85% and 95%
# This is just to ensure that the histogram count is showing properly
nrow(subset(acs, HSDegree > 85 & HSDegree < 95))
pdf("assignment_3.1.1_Histogram_SamantaArindam.pdf")
#3. Histogram with HSDegree variable
# Using gghist as the object I have plotted a simple histogram
# binwidth is set to 5 which shows an outlier
gghist <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 5, alpha = 0.6) +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Count")
# Plot the histogram
gghist
# This second histogram we have asked for density plot as we want to plot the normal curve
# 4 The data distribution from the frequency histogram shows that it is bimodal as we have 2 towers.
# -------------------------------------------------------------------------------------------------
ggdens <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 1, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
# print the plot
ggdens
# Adding another layer to the chart - normal curve
# Adding another layer stat_function() to the histogram object ggdens
# The curve shows that the distribution is not symmetrical/normal. It is not bell-shaped.
# It is negatively skewed as the higher frequency values are towards the tail
# No this data cannot be represented as a normal model.
ggdens + stat_function(fun = dnorm, args = list(mean = mean(acs$HSDegree, na.rm = TRUE),
sd = sd(acs$HSDegree, na.rm = TRUE)),
color = "red", size = 1 )
# Drawing a Q-Q plot
# This is another way to inspect and see if a distribution is normal
ggplot(acs, aes(sample = acs$HSDegree)) + stat_qq()
## As the QQ plot also shows as it does not have all the points on the diagonal so the distribution is not normal.
graphics.off()
sink("assignment_3.1.2_ACS_2014_SamantaArindam.txt")
# 7 Using stat.desc function from the package pastecs
print(stat.desc(acs$HSDegree, basic = FALSE, norm = TRUE))
sink()
# TASK 3.1
rm(list = ls())
# Assignment: ASSIGNMENT 3.1 2014 American Community Survey
# Name: SAMANTA, ARINDAM
# Date: 22 DECEMBER 2019
# TASK 3.1
rm(list = ls())
# Load the libraries needed
library(ggplot2)
library(tidyr)
library(readr)
library(pastecs)
# Reading the file into a dataframe:acs
# The dataset contains 8 variables with 136 observations
# The elements are ID, Id2, Geography,PopGroupID, POPGROUP.display-label`, RacesReported,
# HSDegree and BachDegree.
# The data types are shown in the output of str()
acs <- read_csv("acs-14-1yr-s0201.csv")
sink("assignment_3.1.1_ACS_2014_SamantaArindam.txt")
# Viewing a sample of the data from the data frame
print(head(acs))
#2. Structure of the dataframe
print(str(acs))
#2. No. of observations/rows
nrow(acs)
#2. No of variables/columns
print(ncol(acs))
sink()
# Counting the No of rows having the HS Degree between 85% and 95%
# This is just to ensure that the histogram count is showing properly
nrow(subset(acs, HSDegree > 85 & HSDegree < 95))
pdf("assignment_3.1.1_Histogram_SamantaArindam.pdf")
#3. Histogram with HSDegree variable
# Using gghist as the object I have plotted a simple histogram
# binwidth is set to 5 which shows an outlier
gghist <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 5, alpha = 0.6) +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Count")
# Plot the histogram
gghist
# This second histogram we have asked for density plot as we want to plot the normal curve
# 4 The data distribution from the frequency histogram shows that it is bimodal as we have 2 towers.
# -------------------------------------------------------------------------------------------------
ggdens <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 1, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
# print the plot
ggdens
# Adding another layer to the chart - normal curve
# Adding another layer stat_function() to the histogram object ggdens
# The curve shows that the distribution is not symmetrical/normal. It is not bell-shaped.
# It is negatively skewed as the higher frequency values are towards the tail
# No this data cannot be represented as a normal model.
ggdens + stat_function(fun = dnorm, args = list(mean = mean(acs$HSDegree, na.rm = TRUE),
sd = sd(acs$HSDegree, na.rm = TRUE)),
color = "red", size = 1 )
# Drawing a Q-Q plot
# This is another way to inspect and see if a distribution is normal
ggplot(acs, aes(sample = acs$HSDegree)) + stat_qq()
## As the QQ plot also shows as it does not have all the points on the diagonal so the distribution is not normal.
graphics.off()
sink("assignment_3.1.2_ACS_2014_SamantaArindam.txt")
# 7 Using stat.desc function from the package pastecs
# # as per the graph showing the skewness we see that it is
## negatively skewed as the frequency of the density is
## towards the higher end.
## kurtosis measures the pointyness of the distribution.
## Here in this case we see the kutosis is positive, so
## it implies that it is leptokurtic which implies
## a heavy tailed distribution.
## Also we see form the histogram that if we remove the
## outliers from the lower value then we might end up with
## normal distribution.
print(stat.desc(acs$HSDegree, basic = FALSE, norm = TRUE))
sink()
library(pastecs)
# TASK 3.1
rm(list = ls())
# TASK 3.1
rm(list = ls())
# Load the libraries needed
library(ggplot2)
library(tidyr)
library(readr)
library(pastecs)
acs <- read_csv("acs-14-1yr-s0201.csv")
# Viewing a sample of the data from the data frame
## --print(head(acs))
head(acs)
#2. Structure of the dataframe
## -- print(str(acs))
str(acs)
#2. No. of observations/rows
nrow(acs)
#2. No of variables/columns
## print(ncol(acs))
ncol(acs)
# Counting the No of rows having the HS Degree between 85% and 95%
# This is just to ensure that the histogram count is showing properly
nrow(subset(acs, HSDegree > 85 & HSDegree < 95))
## pdf("assignment_3.1.1_Histogram_SamantaArindam.pdf")
#3. Histogram with HSDegree variable
# Using gghist as the object I have plotted a simple histogram
# binwidth is set to 5 which shows an outlier
gghist <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram( binwidth = 5, alpha = 0.6) +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Count")
# Plot the histogram
gghist
# This second histogram we have asked for density plot as we want to plot the normal curve
# 4 The data distribution from the frequency histogram shows that it is bimodal as we have 2 towers.
# -------------------------------------------------------------------------------------------------
ggdens <- ggplot(acs, aes( x = HSDegree)) +
geom_histogram(aes(y = ..density.. ), binwidth = 1, color = "black", fill = "white") +
labs(title = "Histogram using ggplot2",
x = "HS Degree %", y = "Density")
install.packages("car")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages(c("boot", "foreign", "MASS", "mime", "pillar", "vctrs"))
install.packages(c("boot", "foreign", "MASS", "mime", "pillar", "vctrs"))
install.packages(c("boot", "foreign", "MASS", "mime", "pillar", "vctrs"))
install.packages(c("boot", "foreign", "MASS", "mime", "pillar", "vctrs"))
install.packages(c("boot", "foreign", "MASS", "mime", "pillar", "vctrs"))
